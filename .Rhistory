library(kableExtra)
library(htmlTable)
library(ggplot2)
library(readxl)
library(gridExtra)
# Load data
# acs <- read.csv('airport_choice_survey.csv')
# traffic <- read.csv('traffic.csv')
# province <- read.csv('province.csv')
# price <- read.csv('price.csv')
acs <- read_excel("airport_choice_survey_EN_ver2.0_Capstone.xlsx", sheet = 'Data')
traffic <- read_excel("Airport_Airline_data.xlsx", sheet = 1)
province <- read_excel("Airport_Airline_data.xlsx", sheet = 3)
price <- read_excel("Airport_Airline_data.xlsx", sheet = 2)
# Rename columns in R
names(acs)[1]<-"ID"
names(price)[1] <- "Airport"
names(province)[1] <- "Airport"
names(province)[4] <- "Travel.time.min"
names(traffic)[1] <- "Airport"
# Clear environment of variables and functions
rm(list = ls(all = TRUE))
# Clear environmet of packages
if(is.null(sessionInfo()$otherPkgs) == FALSE)lapply(paste("package:", names(sessionInfo()$otherPkgs), sep=""), detach, character.only = TRUE, unload = TRUE)
library(tidyverse)
library(GGally)
library(ggplot2)
library(readxl)
library(kableExtra)
library(gridExtra)
library(outliers)
library(Hmisc)
library(DMwR)
library(here)
# Load data
## CSV file
acs <- read.csv('airport_choice_survey_modified.csv')
#traffic <- read.csv('traffic.csv')
#province <- read.csv('province.csv')
#price <- read.csv('price.csv')
## XLSX file
# acs <- read_excel("airport_choice_survey_EN_ver2.0_Capstone.xlsx", sheet = 'Data')
# traffic <- read_excel("Airport_Airline_data.xlsx", sheet = 1)
# province <- read_excel("Airport_Airline_data.xlsx", sheet = 3)
# price <- read_excel("Airport_Airline_data.xlsx", sheet = 2)
# Rename columns in R
names(acs)[1]<-"ID"
# names(price)[1] <- "Airport"
# names(province)[1] <- "Airport"
# names(province)[4] <- "Travel.time.min"
# names(traffic)[1] <- "Airport"
str(acs)
summary(acs)
# Data cleaning
acs[2] <- ifelse(acs[2] == 1, 'ICN', 'GMP')
acs[3] <- ifelse(acs[3] == 1, 'Korean',
(ifelse(acs[3] == 2, 'Korean',
(ifelse(acs[3] == 3, 'Korean', 'Foreign'))))
)
acs[4] <- ifelse(acs[4] <= 50 , '<=50', '>50')
acs[7] <- ifelse(acs[7] == 1, 'Leisure', 'Business')
# Remove ID column
acs <- select(acs, -1)
# Remove unwanted variables: FlightNo, FrequentFlightDestination, DepartureHr, DepartureMn, Mileage, MileageAireline
acs <- acs[ , -c(12, 14:16, 26,27) ]
# Convert data type
acs$Age <- as.factor(acs$Age)
acs$Airport <- as.factor(acs$Airport)
acs$Airline <- as.factor(acs$Airline)
acs$Gender <- as.factor(acs$Gender)
acs$Nationality <-as.factor(acs$Nationality)
acs$TripPurpose <-as.factor(acs$TripPurpose)
acs$ProvinceResidence <-as.factor(acs$ProvinceResidence)
acs$GroupTravel <-as.factor(acs$GroupTravel)
acs$Destination <-as.factor(acs$Destination)
acs$DepartureTime <-as.factor(acs$DepartureTime)
acs$SeatClass <-as.factor(acs$SeatClass)
acs$ModeTransport <-as.factor(acs$ModeTransport)
acs$Occupation <-as.factor(acs$Occupation)
acs$Income <-as.factor(acs$Income)
summary(acs)
# Missing Values
# Remove
acs <- acs[!is.na(acs$Age),]
acs <- acs[!is.na(acs$Gender),]
acs <- acs[!is.na(acs$Destination),]
acs <- acs[!is.na(acs$SeatClass),]
# Replace numerical variables' NAs with mean
acs$Airfare[is.na(acs$Airfare)] <- mean(acs$Airfare, na.rm = T)
acs$AccessCost[is.na(acs$AccessCost)] <- mean(acs$AccessCost, na.rm = T)
# impute(acs$Age, mean)
# impute(acs$TripDuration, mean)
# impute(acs$FlyingCompanion, mean)
# impute(acs$NoTripsLastYear, mean)
# impute(acs$Airfare, mean)
# impute(acs$NoTransport, mean)
# impute(acs$AccessCost, mean)
# impute(acs$AcessTime, mean)
# Replace categorical variables with KNN
acs_na <- knnImputation(acs)
# Check NA
anyNA(acs_na)
summary(acs_na)
# Outliers - numerical
outlier(acs_na$TripDuration)
outlier(acs_na$FlyingCompanion)
outlier(acs_na$NoTripsLastYear)
outlier(acs_na$Airfare)
outlier(acs_na$NoTransport)
outlier(acs_na$AccessCost)
outlier(acs_na$AccessTime)
#
# Remove Outliers
acs_out <- acs_na %>%
filter(TripDuration != 730,FlyingCompanion != 34, NoTripsLastYear != 122,Airfare != 260,NoTransport != 4, AccessCost != 350000, AccessTime != 390)
View(acs_out)
View(acs_na)
# Clear environment of variables and functions
rm(list = ls(all = TRUE))
# Clear environmet of packages
if(is.null(sessionInfo()$otherPkgs) == FALSE)lapply(paste("package:", names(sessionInfo()$otherPkgs), sep=""), detach, character.only = TRUE, unload = TRUE)
library(tidyverse)
library(GGally)
library(ggplot2)
library(readxl)
library(kableExtra)
library(gridExtra)
library(outliers)
library(Hmisc)
library(DMwR)
library(here)
library(dplyr)
# Load data
## CSV file
acs <- read.csv('airport_choice_survey_modified.csv')
traffic <- read.csv('traffic.csv')
# Rename columns in R
names(acs)[1]<-"ID"
# names(price)[1] <- "Airport"
# names(province)[1] <- "Airport"
# names(province)[4] <- "Travel.time.min"
# names(traffic)[1] <- "Airport"
str(acs)
summary(acs)
# Data cleaning
acs[2] <- ifelse(acs[2] == 1, 'ICN', 'GMP')
acs[3] <- ifelse(acs[3] == 1, 'Korean',
(ifelse(acs[3] == 2, 'Korean',
(ifelse(acs[3] == 3, 'Korean', 'Foreign'))))
)
acs[4] <- ifelse(acs[4] <= 50 , '<=50', '>50')
acs[7] <- ifelse(acs[7] == 1, 'Leisure', 'Business')
# Remove ID column
acs <- select(acs, -1)
# Remove unwanted variables: FlightNo, FrequentFlightDestination, DepartureHr, DepartureMn, Mileage, MileageAireline
acs <- acs[ , -c(12, 14:16, 26,27) ]
# Convert data type
acs$Age <- as.factor(acs$Age)
acs$Airport <- as.factor(acs$Airport)
acs$Airline <- as.factor(acs$Airline)
acs$Gender <- as.factor(acs$Gender)
acs$Nationality <-as.factor(acs$Nationality)
acs$TripPurpose <-as.factor(acs$TripPurpose)
acs$ProvinceResidence <-as.factor(acs$ProvinceResidence)
acs$GroupTravel <-as.factor(acs$GroupTravel)
acs$Destination <-as.factor(acs$Destination)
acs$DepartureTime <-as.factor(acs$DepartureTime)
acs$SeatClass <-as.factor(acs$SeatClass)
acs$ModeTransport <-as.factor(acs$ModeTransport)
acs$Occupation <-as.factor(acs$Occupation)
acs$Income <-as.factor(acs$Income)
summary(acs)
# Missing Values
# Remove
acs <- acs[!is.na(acs$Age),]
acs <- acs[!is.na(acs$Airline),]
acs <- acs[!is.na(acs$Gender),]
acs <- acs[!is.na(acs$Destination),]
acs <- acs[!is.na(acs$SeatClass),]
# Replace numerical variables' NAs with means by groups
## Get means by groups
acs_airfare_na <- acs %>%
group_by(Airport, Airline, Destination) %>%
dplyr::summarize(Airfare = mean(Airfare, na.rm=TRUE))
acs_accesscost_na <- acs %>%
group_by(Airport, ProvinceResidence, AccessTime) %>%
dplyr::summarize(AccessCost = mean(AccessCost, na.rm=TRUE))
acs_accesscost_na2 <- acs %>%
group_by(Airport, ProvinceResidence) %>%
dplyr::summarize(AccessCost = mean(AccessCost, na.rm=TRUE))
# Export data for manually imputing NAs
#write.csv(acs, file = "acs_na.csv")
# Read acs_na
acs_na <- read.csv('acs_na.csv')
acs_na$Age <- as.factor(acs$Age)
acs_na$Airport <- as.factor(acs$Airport)
acs_na$Airline <- as.factor(acs$Airline)
acs_na$Gender <- as.factor(acs$Gender)
acs_na$Nationality <-as.factor(acs$Nationality)
acs_na$TripPurpose <-as.factor(acs$TripPurpose)
acs_na$ProvinceResidence <-as.factor(acs$ProvinceResidence)
acs_na$GroupTravel <-as.factor(acs$GroupTravel)
acs_na$Destination <-as.factor(acs$Destination)
acs_na$DepartureTime <-as.factor(acs$DepartureTime)
acs_na$SeatClass <-as.factor(acs$SeatClass)
acs_na$ModeTransport <-as.factor(acs$ModeTransport)
acs_na$Occupation <-as.factor(acs$Occupation)
acs_na$Income <-as.factor(acs$Income)
# Remove NAs in airfare
acs_na <- acs_na[!is.na(acs_na$Airfare),]
acs_na <- acs_na[!is.na(acs_na$AccessCost),]
# 468 observations
summary(acs_na)
# Regroup NAs in categorical variables (Income Millon Won)
acs_na[21] <- ifelse(acs_na[21] == 1, '<=30',
(ifelse(acs_na[21] == 2, '30~80',
(ifelse(acs_na[21] == 3, '30~80',
(ifelse(acs_na[21] == 4, '80~150',
(ifelse(acs_na[3] == 5, '80~150',
(ifelse(acs_na[3] == 'NA', 'NA','150~200>')))))))))))
acs_na$Income[is.na(acs_na$Income)] <- 0
anyNA(acs_na)
summary(acs_na)
# check observation numbers first! too low? dont drop
# Outliers - numerical
outlier(acs_na$TripDuration)
outlier(acs_na$FlyingCompanion)
outlier(acs_na$NoTripsLastYear)
outlier(acs_na$Airfare)
outlier(acs_na$NoTransport)
outlier(acs_na$AccessCost)
outlier(acs_na$AccessTime)
# Remove Outliers
acs_out <- acs_na %>%
filter(TripDuration != 730,FlyingCompanion != 34,NoTransport != 4, AccessCost != 350000, AccessTime != 390)
summary(acs_out)
str(acs_out)
# Clear environment of variables and functions
rm(list = ls(all = TRUE))
# Clear environmet of packages
if(is.null(sessionInfo()$otherPkgs) == FALSE)lapply(paste("package:", names(sessionInfo()$otherPkgs), sep=""), detach, character.only = TRUE, unload = TRUE)
# Clear environment of variables and functions
rm(list = ls(all = TRUE))
# Clear environmet of packages
if(is.null(sessionInfo()$otherPkgs) == FALSE)lapply(paste("package:", names(sessionInfo()$otherPkgs), sep=""), detach, character.only = TRUE, unload = TRUE)
library(tidyverse)
library(GGally)
library(ggplot2)
library(readxl)
library(kableExtra)
library(gridExtra)
library(outliers)
library(Hmisc)
library(DMwR)
library(here)
library(dplyr)
# Load data
## CSV file
acs <- read.csv('airport_choice_survey_modified.csv')
traffic <- read.csv('traffic.csv')
# Rename columns in R
names(acs)[1]<-"ID"
# names(price)[1] <- "Airport"
# names(province)[1] <- "Airport"
# names(province)[4] <- "Travel.time.min"
# names(traffic)[1] <- "Airport"
str(acs)
summary(acs)
# Data cleaning
acs[2] <- ifelse(acs[2] == 1, 'ICN', 'GMP')
acs[3] <- ifelse(acs[3] == 1, 'Korean',
(ifelse(acs[3] == 2, 'Korean',
(ifelse(acs[3] == 3, 'Korean', 'Foreign'))))
)
acs[4] <- ifelse(acs[4] <= 50 , '<=50', '>50')
acs[7] <- ifelse(acs[7] == 1, 'Leisure', 'Business')
# Remove ID column
acs <- select(acs, -1)
# Remove unwanted variables: FlightNo, FrequentFlightDestination, DepartureHr, DepartureMn, Mileage, MileageAireline
acs <- acs[ , -c(12, 14:16, 26,27) ]
# Convert data type
acs$Age <- as.factor(acs$Age)
acs$Airport <- as.factor(acs$Airport)
acs$Airline <- as.factor(acs$Airline)
acs$Gender <- as.factor(acs$Gender)
acs$Nationality <-as.factor(acs$Nationality)
acs$TripPurpose <-as.factor(acs$TripPurpose)
acs$ProvinceResidence <-as.factor(acs$ProvinceResidence)
acs$GroupTravel <-as.factor(acs$GroupTravel)
acs$Destination <-as.factor(acs$Destination)
acs$DepartureTime <-as.factor(acs$DepartureTime)
acs$SeatClass <-as.factor(acs$SeatClass)
acs$ModeTransport <-as.factor(acs$ModeTransport)
acs$Occupation <-as.factor(acs$Occupation)
acs$Income <-as.factor(acs$Income)
summary(acs)
# Missing Values
# Remove
acs <- acs[!is.na(acs$Age),]
acs <- acs[!is.na(acs$Airline),]
acs <- acs[!is.na(acs$Gender),]
acs <- acs[!is.na(acs$Destination),]
acs <- acs[!is.na(acs$SeatClass),]
# Replace numerical variables' NAs with means by groups
## Get means by groups
acs_airfare_na <- acs %>%
group_by(Airport, Airline, Destination) %>%
dplyr::summarize(Airfare = mean(Airfare, na.rm=TRUE))
acs_accesscost_na <- acs %>%
group_by(Airport, ProvinceResidence, AccessTime) %>%
dplyr::summarize(AccessCost = mean(AccessCost, na.rm=TRUE))
acs_accesscost_na2 <- acs %>%
group_by(Airport, ProvinceResidence) %>%
dplyr::summarize(AccessCost = mean(AccessCost, na.rm=TRUE))
# Export data for manually imputing NAs
#write.csv(acs, file = "acs_na.csv")
# Read acs_na
acs_na <- read.csv('acs_na.csv')
acs_na$Age <- as.factor(acs$Age)
acs_na$Airport <- as.factor(acs$Airport)
acs_na$Airline <- as.factor(acs$Airline)
acs_na$Gender <- as.factor(acs$Gender)
acs_na$Nationality <-as.factor(acs$Nationality)
acs_na$TripPurpose <-as.factor(acs$TripPurpose)
acs_na$ProvinceResidence <-as.factor(acs$ProvinceResidence)
acs_na$GroupTravel <-as.factor(acs$GroupTravel)
acs_na$Destination <-as.factor(acs$Destination)
acs_na$DepartureTime <-as.factor(acs$DepartureTime)
acs_na$SeatClass <-as.factor(acs$SeatClass)
acs_na$ModeTransport <-as.factor(acs$ModeTransport)
acs_na$Occupation <-as.factor(acs$Occupation)
acs_na$Income <-as.factor(acs$Income)
# Remove NAs in airfare
acs_na <- acs_na[!is.na(acs_na$Airfare),]
acs_na <- acs_na[!is.na(acs_na$AccessCost),]
# 468 observations
summary(acs_na)
# Regroup NAs in categorical variables (Income Millon Won)
acs_na[21] <- ifelse(acs_na[21] == 1, '<=30',
(ifelse(acs_na[21] == 2, '30~80',
(ifelse(acs_na[21] == 3, '30~80',
(ifelse(acs_na[21] == 4, '80~150',
(ifelse(acs_na[3] == 5, '80~150',
(ifelse(acs_na[3] == 'NA', 'NA','150~200>')))))))))))
acs_na$Income[is.na(acs_na$Income)] <- 0
anyNA(acs_na)
summary(acs_na)
# check observation numbers first! too low? dont drop
# Outliers - numerical
outlier(acs_na$TripDuration)
outlier(acs_na$FlyingCompanion)
outlier(acs_na$NoTripsLastYear)
outlier(acs_na$Airfare)
outlier(acs_na$NoTransport)
outlier(acs_na$AccessCost)
outlier(acs_na$AccessTime)
# Remove Outliers
acs_out <- acs_na %>%
filter(TripDuration != 730,FlyingCompanion != 34,NoTransport != 4, AccessCost != 350000, AccessTime != 390)
# Clear environment of variables and functions
rm(list = ls(all = TRUE))
# Clear environmet of packages
if(is.null(sessionInfo()$otherPkgs) == FALSE)lapply(paste("package:", names(sessionInfo()$otherPkgs), sep=""), detach, character.only = TRUE, unload = TRUE)
# Clear environment of variables and functions
rm(list = ls(all = TRUE))
# Clear environmet of packages
if(is.null(sessionInfo()$otherPkgs) == FALSE)lapply(paste("package:", names(sessionInfo()$otherPkgs), sep=""), detach, character.only = TRUE, unload = TRUE)
# Clear environment of variables and functions
rm(list = ls(all = TRUE))
# Clear environmet of packages
if(is.null(sessionInfo()$otherPkgs) == FALSE)lapply(paste("package:", names(sessionInfo()$otherPkgs), sep=""), detach, character.only = TRUE, unload = TRUE)
library(tidyverse)
library(GGally)
library(ggplot2)
library(readxl)
library(kableExtra)
library(gridExtra)
library(outliers)
library(Hmisc)
library(DMwR)
library(here)
library(dplyr)
# Load data
## CSV file
acs <- read.csv('airport_choice_survey_modified.csv')
traffic <- read.csv('traffic.csv')
# Rename columns in R
names(acs)[1]<-"ID"
# names(price)[1] <- "Airport"
# names(province)[1] <- "Airport"
# names(province)[4] <- "Travel.time.min"
# names(traffic)[1] <- "Airport"
str(acs)
summary(acs)
# Data cleaning
acs[2] <- ifelse(acs[2] == 1, 'ICN', 'GMP')
acs[3] <- ifelse(acs[3] == 1, 'Korean',
(ifelse(acs[3] == 2, 'Korean',
(ifelse(acs[3] == 3, 'Korean', 'Foreign'))))
)
acs[4] <- ifelse(acs[4] <= 50 , '<=50', '>50')
acs[7] <- ifelse(acs[7] == 1, 'Leisure', 'Business')
# Remove ID column
acs <- select(acs, -1)
# Remove unwanted variables: FlightNo, FrequentFlightDestination, DepartureHr, DepartureMn, Mileage, MileageAireline
acs <- acs[ , -c(12, 14:16, 26,27) ]
# Convert data type
acs$Age <- as.factor(acs$Age)
acs$Airport <- as.factor(acs$Airport)
acs$Airline <- as.factor(acs$Airline)
acs$Gender <- as.factor(acs$Gender)
acs$Nationality <-as.factor(acs$Nationality)
acs$TripPurpose <-as.factor(acs$TripPurpose)
acs$ProvinceResidence <-as.factor(acs$ProvinceResidence)
acs$GroupTravel <-as.factor(acs$GroupTravel)
acs$Destination <-as.factor(acs$Destination)
acs$DepartureTime <-as.factor(acs$DepartureTime)
acs$SeatClass <-as.factor(acs$SeatClass)
acs$ModeTransport <-as.factor(acs$ModeTransport)
acs$Occupation <-as.factor(acs$Occupation)
acs$Income <-as.factor(acs$Income)
summary(acs)
# Missing Values
# Remove
acs <- acs[!is.na(acs$Age),]
acs <- acs[!is.na(acs$Airline),]
acs <- acs[!is.na(acs$Gender),]
acs <- acs[!is.na(acs$Destination),]
acs <- acs[!is.na(acs$SeatClass),]
# Replace numerical variables' NAs with means by groups
## Get means by groups
acs_airfare_na <- acs %>%
group_by(Airport, Airline, Destination) %>%
dplyr::summarize(Airfare = mean(Airfare, na.rm=TRUE))
acs_accesscost_na <- acs %>%
group_by(Airport, ProvinceResidence, AccessTime) %>%
dplyr::summarize(AccessCost = mean(AccessCost, na.rm=TRUE))
acs_accesscost_na2 <- acs %>%
group_by(Airport, ProvinceResidence) %>%
dplyr::summarize(AccessCost = mean(AccessCost, na.rm=TRUE))
# Export data for manually imputing NAs
#write.csv(acs, file = "acs_na.csv")
# Read acs_na
acs_na <- read.csv('acs_na.csv')
acs_na$Age <- as.factor(acs$Age)
acs_na$Airport <- as.factor(acs$Airport)
acs_na$Airline <- as.factor(acs$Airline)
acs_na$Gender <- as.factor(acs$Gender)
acs_na$Nationality <-as.factor(acs$Nationality)
acs_na$TripPurpose <-as.factor(acs$TripPurpose)
acs_na$ProvinceResidence <-as.factor(acs$ProvinceResidence)
acs_na$GroupTravel <-as.factor(acs$GroupTravel)
acs_na$Destination <-as.factor(acs$Destination)
acs_na$DepartureTime <-as.factor(acs$DepartureTime)
acs_na$SeatClass <-as.factor(acs$SeatClass)
acs_na$ModeTransport <-as.factor(acs$ModeTransport)
acs_na$Occupation <-as.factor(acs$Occupation)
acs_na$Income <-as.factor(acs$Income)
# Remove NAs in airfare
acs_na <- acs_na[!is.na(acs_na$Airfare),]
acs_na <- acs_na[!is.na(acs_na$AccessCost),]
# 468 observations
summary(acs_na)
# Read acs_na
acs_na <- read.csv('acs_na.csv')
acs_na$Age <- as.factor(acs$Age)
acs_na$Airport <- as.factor(acs$Airport)
acs_na$Airline <- as.factor(acs$Airline)
acs_na$Gender <- as.factor(acs$Gender)
acs_na$Nationality <-as.factor(acs$Nationality)
acs_na$TripPurpose <-as.factor(acs$TripPurpose)
acs_na$ProvinceResidence <-as.factor(acs$ProvinceResidence)
acs_na$GroupTravel <-as.factor(acs$GroupTravel)
acs_na$Destination <-as.factor(acs$Destination)
acs_na$DepartureTime <-as.factor(acs$DepartureTime)
acs_na$SeatClass <-as.factor(acs$SeatClass)
acs_na$ModeTransport <-as.factor(acs$ModeTransport)
acs_na$Occupation <-as.factor(acs$Occupation)
acs_na$Income <-as.factor(acs$Income)
# Remove NAs in airfare
acs_na <- acs_na[!is.na(acs_na$Airfare),]
acs_na <- acs_na[!is.na(acs_na$AccessCost),]
# 468 observations
summary(acs_na)
# Regroup NAs in categorical variables (Income Millon Won)
acs_na[21] <- ifelse(acs_na[21] == 1, '<=30',
(ifelse(acs_na[21] == 2, '30~80',
(ifelse(acs_na[21] == 3, '30~80',
(ifelse(acs_na[21] == 4, '80~150',
(ifelse(acs_na[3] == 5, '80~150',
(ifelse(acs_na[3] == 'NA', 'NA','150~200>')))))))))))
acs_na$Income[is.na(acs_na$Income)] <- 0
anyNA(acs_na)
summary(acs_na)
# check observation numbers first! too low? dont drop
# Outliers - numerical
outlier(acs_na$TripDuration)
outlier(acs_na$FlyingCompanion)
outlier(acs_na$NoTripsLastYear)
outlier(acs_na$Airfare)
outlier(acs_na$NoTransport)
outlier(acs_na$AccessCost)
outlier(acs_na$AccessTime)
# Remove Outliers
acs_out <- acs_na %>%
filter(TripDuration != 730,FlyingCompanion != 34,NoTransport != 4, AccessCost != 350000, AccessTime != 390)
summary(acs_out)
# Data Vis
## Categorical
airport <- acs_out %>%
group_by(Airport) %>%
summarise(count= n())
