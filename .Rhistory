# Clear environment of variables and functions
rm(list = ls(all = TRUE))
# Clear environmet of packages
if(is.null(sessionInfo()$otherPkgs) == FALSE)lapply(paste("package:", names(sessionInfo()$otherPkgs), sep=""), detach, character.only = TRUE, unload = TRUE)
library(tidyverse)
library(GGally)
library(janitor)
library(kableExtra)
library(htmlTable)
library(ggplot2)
library(readxl)
library(gridExtra)
# Load data
# acs <- read.csv('airport_choice_survey.csv')
# traffic <- read.csv('traffic.csv')
# province <- read.csv('province.csv')
# price <- read.csv('price.csv')
acs <- read_excel("airport_choice_survey_EN_ver2.0_Capstone.xlsx", sheet = 'Data')
traffic <- read_excel("Airport_Airline_data.xlsx", sheet = 1)
province <- read_excel("Airport_Airline_data.xlsx", sheet = 3)
price <- read_excel("Airport_Airline_data.xlsx", sheet = 2)
# Rename columns in R
names(acs)[1]<-"ID"
names(price)[1] <- "Airport"
names(province)[1] <- "Airport"
names(province)[4] <- "Travel.time.min"
names(traffic)[1] <- "Airport"
str(acs)
# summary(acs)
# Data cleaning
acs[2] <- ifelse(acs[2] == 1, 'ICN', 'GMP')
acs[3] <- ifelse(acs[3] == 1, 'Korean',
(ifelse(acs[3] == 2, 'Korean',
(ifelse(acs[3] == 3, 'Korean', 'Foreign'))))
)
acs[4] <- ifelse(acs[4] <= 50 , '<=50', '>50')
acs[7] <- ifelse(acs[7] == 1, 'Leisure', 'Business')
# Remove unwanted variables: FlightNo, DepartureHr, DepartureMn
acs <- acs[ , -c(15:17, 27:28) ]
# Missing values
acs <- acs[!is.na(acs$Airline),]
acs <- acs[!is.na(acs$Age),]
acs <- acs[!is.na(acs$Gender),]
acs <- acs[!is.na(acs$Destination),]
# acs <- acs[!is.na(acs$Airfare),]
# acs <- acs[!is.na(acs$AccessCost),]
# acs <- acs[!is.na(acs$AccessTime),]
summary(acs)
airport <- acs %>%
group_by(Airport) %>%
summarise(count= n())
airline <- acs %>%
group_by(Airline) %>%
summarise(count= n())
age <- acs %>%
group_by(Age) %>%
summarise(count= n())
gender <- acs %>%
group_by(Gender) %>%
summarise(count= n())
nationality <- acs %>%
group_by(Nationality) %>%
summarise(count= n())
trippurpose <- acs %>%
group_by(TripPurpose) %>%
summarise(count= n())
provinceresidence <- acs %>%
group_by(ProvinceResidence) %>%
summarise(count= n())
grouptravel <- acs %>%
group_by(GroupTravel) %>%
summarise(count= n())
frequentdest <- acs %>%
group_by(FrequentFlightDestination) %>%
summarise(count= n())
destination <- acs %>%
group_by(Destination) %>%
summarise(count= n())
departuretime <- acs %>%
group_by(DepartureTime) %>%
summarise(count= n())
seatclass <- acs %>%
group_by(SeatClass) %>%
summarise(count= n())
modetrans <- acs %>%
group_by(ModeTransport) %>%
summarise(count= n())
occupation <- acs %>%
group_by(Occupation) %>%
summarise(count= n())
income <- acs %>%
group_by(Income) %>%
summarise(count= n())
grid.arrange(
airport %>%
ggplot(aes(x = Airport, y = count)) +
geom_bar(stat = 'identity'),
airline %>%
ggplot(aes(x = Airline, y = count)) +
geom_bar(stat = 'identity'),
age %>%
ggplot(aes(x = Age, y = count)) +
geom_bar(stat = 'identity'),
gender %>%
ggplot(aes(x = Gender, y = count)) +
geom_bar(stat = 'identity'),
nationality %>%
ggplot(aes(x = Nationality, y = count)) +
geom_bar(stat = 'identity'),
trippurpose %>%
ggplot(aes(x = TripPurpose, y = count)) +
geom_bar(stat = 'identity'),
provinceresidence %>%
ggplot(aes(x = ProvinceResidence, y = count)) +
geom_bar(stat = 'identity'),
grouptravel %>%
ggplot(aes(x = GroupTravel, y = count)) +
geom_bar(stat = 'identity'),
frequentdest %>%
ggplot(aes(x = FrequentFlightDestination, y = count)) +
geom_bar(stat = 'identity'),
destination %>%
ggplot(aes(x = Destination, y = count)) +
geom_bar(stat = 'identity'),
departuretime %>%
ggplot(aes(x = DepartureTime, y = count)) +
geom_bar(stat = 'identity'),
seatclass %>%
ggplot(aes(x = SeatClass, y = count)) +
geom_bar(stat = 'identity'),
modetrans %>%
ggplot(aes(x = ModeTransport, y = count)) +
geom_bar(stat = 'identity'),
occupation %>%
ggplot(aes(x = Occupation, y = count)) +
geom_bar(stat = 'identity'),
income %>%
ggplot(aes(x = Income, y = count)) +
geom_bar(stat = 'identity'),
ncol = 4
)
grid.arrange(
acs %>%
ggplot(aes(TripDuration)) +
geom_histogram(),
acs %>%
ggplot(aes(FlyingCompanion)) +
geom_histogram(),
acs %>%
ggplot(aes(NoTripsLastYear)) +
geom_histogram(),
acs %>%
ggplot(aes(Airfare)) +
geom_histogram(),
acs %>%
ggplot(aes(NoTransport)) +
geom_histogram(),
acs %>%
ggplot(aes(AccessCost)) +
geom_histogram(),
acs %>%
ggplot(aes(AccessTime)) +
geom_histogram(),
ncol = 2
)
# Remove outliers, try out different restrictions
acs <- acs %>% filter(TripDuration <= 200,
FlyingCompanion <= 10,
NoTripsLastYear <= 20,
Airfare <= 150,
AccessCost <= 60000,
AccessTime <= 200)
# Remove outliers, try out different restrictions
acs <- acs %>% filter(TripDuration <= 200,
FlyingCompanion <= 10,
NoTripsLastYear <= 20,
Airfare <= 150,
AccessCost <= 60000,
AccessTime <= 200)
View(acs)
View(age)
View(airline)
View(airport)
View(departuretime)
View(destination)
View(frequentdest)
View(gender)
View(grouptravel)
View(income)
View(modetrans)
View(nationality)
View(occupation)
View(price)
# Clear environment of variables and functions
rm(list = ls(all = TRUE))
# Clear environmet of packages
if(is.null(sessionInfo()$otherPkgs) == FALSE)lapply(paste("package:", names(sessionInfo()$otherPkgs), sep=""), detach, character.only = TRUE, unload = TRUE)
# Load data
# acs <- read.csv('airport_choice_survey.csv')
# traffic <- read.csv('traffic.csv')
# province <- read.csv('province.csv')
# price <- read.csv('price.csv')
acs <- read_excel("airport_choice_survey_EN_ver2.0_Capstone.xlsx", sheet = 'Data')
library(tidyverse)
library(GGally)
library(janitor)
library(kableExtra)
library(htmlTable)
library(ggplot2)
library(readxl)
library(gridExtra)
# Clear environment of variables and functions
rm(list = ls(all = TRUE))
# Clear environmet of packages
if(is.null(sessionInfo()$otherPkgs) == FALSE)lapply(paste("package:", names(sessionInfo()$otherPkgs), sep=""), detach, character.only = TRUE, unload = TRUE)
library(tidyverse)
library(GGally)
library(janitor)
library(kableExtra)
library(htmlTable)
library(ggplot2)
library(readxl)
library(gridExtra)
# Load data
# acs <- read.csv('airport_choice_survey.csv')
# traffic <- read.csv('traffic.csv')
# province <- read.csv('province.csv')
# price <- read.csv('price.csv')
acs <- read_excel("airport_choice_survey_EN_ver2.0_Capstone.xlsx", sheet = 'Data')
traffic <- read_excel("Airport_Airline_data.xlsx", sheet = 1)
province <- read_excel("Airport_Airline_data.xlsx", sheet = 3)
price <- read_excel("Airport_Airline_data.xlsx", sheet = 2)
# Rename columns in R
names(acs)[1]<-"ID"
names(price)[1] <- "Airport"
names(province)[1] <- "Airport"
names(province)[4] <- "Travel.time.min"
names(traffic)[1] <- "Airport"
str(acs)
# summary(acs)
# Data cleaning
acs[2] <- ifelse(acs[2] == 1, 'ICN', 'GMP')
acs[3] <- ifelse(acs[3] == 1, 'Korean',
(ifelse(acs[3] == 2, 'Korean',
(ifelse(acs[3] == 3, 'Korean', 'Foreign'))))
)
acs[4] <- ifelse(acs[4] <= 50 , '<=50', '>50')
acs[7] <- ifelse(acs[7] == 1, 'Leisure', 'Business')
# Convert data type
acs$Gender <- as.character(acs$Gender)
acs$Nationality <-as.character(acs$Nationality)
acs$ProvinceResidence <-as.character(acs$ProvinceResidence)
acs$GroupTravel <-as.character(acs$GroupTravel)
acs$Destination <-as.character(acs$Destination)
acs$DepartureTime <-as.character(acs$DepartureTime)
acs$SeatClass <-as.character(acs$SeatClass)
acs$ModeTransport <-as.character(acs$ModeTransport)
acs$Occupation <-as.character(acs$Occupation)
acs$Income <-as.character(acs$Income)
# Remove unwanted variables: FlightNo, DepartureHr, DepartureMn
acs <- acs[ , -c(15:17, 27:28) ]
# Missing values
acs <- acs[!is.na(acs$Airline),]
acs <- acs[!is.na(acs$Age),]
acs <- acs[!is.na(acs$Gender),]
acs <- acs[!is.na(acs$Destination),]
# acs <- acs[!is.na(acs$Airfare),]
# acs <- acs[!is.na(acs$AccessCost),]
# acs <- acs[!is.na(acs$AccessTime),]
summary(acs)
airport <- acs %>%
group_by(Airport) %>%
summarise(count= n())
airline <- acs %>%
group_by(Airline) %>%
summarise(count= n())
age <- acs %>%
group_by(Age) %>%
summarise(count= n())
gender <- acs %>%
group_by(Gender) %>%
summarise(count= n())
nationality <- acs %>%
group_by(Nationality) %>%
summarise(count= n())
trippurpose <- acs %>%
group_by(TripPurpose) %>%
summarise(count= n())
provinceresidence <- acs %>%
group_by(ProvinceResidence) %>%
summarise(count= n())
grouptravel <- acs %>%
group_by(GroupTravel) %>%
summarise(count= n())
frequentdest <- acs %>%
group_by(FrequentFlightDestination) %>%
summarise(count= n())
destination <- acs %>%
group_by(Destination) %>%
summarise(count= n())
departuretime <- acs %>%
group_by(DepartureTime) %>%
summarise(count= n())
seatclass <- acs %>%
group_by(SeatClass) %>%
summarise(count= n())
modetrans <- acs %>%
group_by(ModeTransport) %>%
summarise(count= n())
occupation <- acs %>%
group_by(Occupation) %>%
summarise(count= n())
income <- acs %>%
group_by(Income) %>%
summarise(count= n())
grid.arrange(
airport %>%
ggplot(aes(x = Airport, y = count)) +
geom_bar(stat = 'identity'),
airline %>%
ggplot(aes(x = Airline, y = count)) +
geom_bar(stat = 'identity'),
age %>%
ggplot(aes(x = Age, y = count)) +
geom_bar(stat = 'identity'),
gender %>%
ggplot(aes(x = Gender, y = count)) +
geom_bar(stat = 'identity'),
nationality %>%
ggplot(aes(x = Nationality, y = count)) +
geom_bar(stat = 'identity'),
trippurpose %>%
ggplot(aes(x = TripPurpose, y = count)) +
geom_bar(stat = 'identity'),
provinceresidence %>%
ggplot(aes(x = ProvinceResidence, y = count)) +
geom_bar(stat = 'identity'),
grouptravel %>%
ggplot(aes(x = GroupTravel, y = count)) +
geom_bar(stat = 'identity'),
frequentdest %>%
ggplot(aes(x = FrequentFlightDestination, y = count)) +
geom_bar(stat = 'identity'),
destination %>%
ggplot(aes(x = Destination, y = count)) +
geom_bar(stat = 'identity'),
departuretime %>%
ggplot(aes(x = DepartureTime, y = count)) +
geom_bar(stat = 'identity'),
seatclass %>%
ggplot(aes(x = SeatClass, y = count)) +
geom_bar(stat = 'identity'),
modetrans %>%
ggplot(aes(x = ModeTransport, y = count)) +
geom_bar(stat = 'identity'),
occupation %>%
ggplot(aes(x = Occupation, y = count)) +
geom_bar(stat = 'identity'),
income %>%
ggplot(aes(x = Income, y = count)) +
geom_bar(stat = 'identity'),
ncol = 4
)
grid.arrange(
acs %>%
ggplot(aes(TripDuration)) +
geom_histogram(),
acs %>%
ggplot(aes(FlyingCompanion)) +
geom_histogram(),
acs %>%
ggplot(aes(NoTripsLastYear)) +
geom_histogram(),
acs %>%
ggplot(aes(Airfare)) +
geom_histogram(),
acs %>%
ggplot(aes(NoTransport)) +
geom_histogram(),
acs %>%
ggplot(aes(AccessCost)) +
geom_histogram(),
acs %>%
ggplot(aes(AccessTime)) +
geom_histogram(),
ncol = 2
)
# Remove outliers, try out different restrictions
acs <- acs %>% filter(TripDuration <= 200,
FlyingCompanion <= 10,
NoTripsLastYear <= 20,
Airfare <= 150,
AccessCost <= 60000,
AccessTime <= 200)
View(province)
View(price)
View(province)
View(traffic)
View(acs)
View(province)
View(airport)
View(provinceresidence)
View(seatclass)
View(trippurpose)
View(acs)
